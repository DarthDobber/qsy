
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA IDENT IF INTEGER LABEL LBRACKET LPAREN NEWLINE RBRACKET RPARENprogram : program instruction\n                   | instructioninstruction : term argument_listinstruction : NEWLINEterm : IDENT\n                | lookuplookup : IDENT LBRACKET INTEGER RBRACKETargument_list : termargument_list : term COMMA argument_list'
    
_lr_action_items = {'NEWLINE':([0,1,2,4,5,6,7,8,9,13,14,],[4,4,-2,-4,-5,-6,-1,-8,-3,-9,-7,]),'IDENT':([0,1,2,3,4,5,6,7,8,9,11,13,14,],[5,5,-2,5,-4,-5,-6,-1,-8,-3,5,-9,-7,]),'$end':([1,2,4,5,6,7,8,9,13,14,],[0,-2,-4,-5,-6,-1,-8,-3,-9,-7,]),'COMMA':([5,6,8,14,],[-5,-6,11,-7,]),'LBRACKET':([5,],[10,]),'INTEGER':([10,],[12,]),'RBRACKET':([12,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instruction':([0,1,],[2,7,]),'term':([0,1,3,11,],[3,3,8,8,]),'lookup':([0,1,3,11,],[6,6,6,6,]),'argument_list':([3,11,],[9,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program instruction','program',2,'p_program','parser.py',13),
  ('program -> instruction','program',1,'p_program','parser.py',14),
  ('instruction -> term argument_list','instruction',2,'p_instruction','parser.py',23),
  ('instruction -> NEWLINE','instruction',1,'p_instruction_newline','parser.py',28),
  ('term -> IDENT','term',1,'p_term','parser.py',32),
  ('term -> lookup','term',1,'p_term','parser.py',33),
  ('lookup -> IDENT LBRACKET INTEGER RBRACKET','lookup',4,'p_lookup','parser.py',37),
  ('argument_list -> term','argument_list',1,'p_argument_list','parser.py',41),
  ('argument_list -> term COMMA argument_list','argument_list',3,'p_argument_list_args','parser.py',45),
]
